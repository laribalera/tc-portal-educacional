name: Projeto - Portal Educacional com Node

on: 
  push:
    branches: 
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for tests
        run: |
          docker build -t tc-portal-educacional-test -f Dockerfile.test .

      - name: Run tests inside Docker
        run: |
          docker run --rm -e MONGO_URI="mongodb://mongo:27017/test" --network host tc-portal-educacional-test npm test -- --detectOpenHandles --forceExit

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for production
        run: |
          docker build -t tc-portal-educacional:latest .

      - name: Push Docker image
        run: |
          docker tag tc-portal-educacional:latest ${{ secrets.DOCKER_USERNAME }}/tc-portal-educacional:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/tc-portal-educacional:latest

      - name: Deploy to server with Docker
        run: |
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "
            docker pull ${{ secrets.DOCKER_USERNAME }}/tc-portal-educacional:latest &&
            docker stop tc-portal-educacional || true &&
            docker rm tc-portal-educacional || true &&
            docker run -d --name tc-portal-educacional -p 3000:3000 -e MONGO_URI='${{ secrets.MONGO_URI }}' ${{ secrets.DOCKER_USERNAME }}/tc-portal-educacional:latest
          "
  
